import Tp1.*

describe "Paquete" {
    /*
        test "el paquete se puede entregar" no es necesario por los casos de prueba pero
        mejor dividir en varios casos peque√±os en vez de juntarlos en un test grande.
    */
    
    test "el pago funciona" {
        //paquete pagado (por defecto)
        assert.that(paquete.puedeMensajeroEntregarEnDestino(jeanGray, puenteDeBrooklyn))
        
        paquete.estaPagado(false)
        assert.notThat(paquete.puedeMensajeroEntregarEnDestino(jeanGray, puenteDeBrooklyn))
    }
}

describe "Puente de Brooklyn" {
    test "las restricciones a los mensajeros funcionan" {
        assert.that(puenteDeBrooklyn.puedePasarMensajero(jeanGray))

        assert.that(puenteDeBrooklyn.puedePasarMensajero(neo))

        assert.that(puenteDeBrooklyn.puedePasarMensajero(saraConnor))

        saraConnor.vehiculo(camion)
        camion.cantidadDeAcoplados(3)
        assert.notThat(puenteDeBrooklyn.puedePasarMensajero(saraConnor))
    }
}

describe "La Matrix" {
    test "las restricciones a los mensajeros funcionan" {
        assert.that(laMatrix.puedePasarMensajero(jeanGray))

        assert.notThat(laMatrix.puedePasarMensajero(saraConnor))

        assert.that(laMatrix.puedePasarMensajero(neo))
        neo.tieneCredito(false)
        assert.notThat(laMatrix.puedePasarMensajero(neo))
    }
}

describe "casos de prueba" {
    test "caso Neo a la Matrix con paquete sin pagar" {
        paquete.estaPagado(false)
        assert.notThat(paquete.puedeMensajeroEntregarEnDestino(neo, laMatrix))
    }
    
    test "caso Jean a la Matrix con paquete pagado" {
        assert.that(paquete.puedeMensajeroEntregarEnDestino(jeanGray, laMatrix))
    }

    test "caso Sara al puente de Brooklyn con camion con acoplados" {
        saraConnor.pesoSara(70)
        saraConnor.vehiculo(camion)
        camion.cantidadDeAcoplados(3)

        assert.notThat(paquete.puedeMensajeroEntregarEnDestino(saraConnor, puenteDeBrooklyn))
    }

    test "caso Sara al puente de Brooklyn con moto" {
        saraConnor.pesoSara(70)
        saraConnor.vehiculo(moto)

        assert.that(paquete.puedeMensajeroEntregarEnDestino(saraConnor, puenteDeBrooklyn))
    }
}
